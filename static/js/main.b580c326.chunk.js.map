{"version":3,"sources":["components/todosComponents/Filters/Filtres.module.css","components/todosComponents/Todo/Todo.module.css","components/todosComponents/InputTodo/InputTodo.module.css","components/todosComponents/Header/Header.module.css","components/todosComponents/Todos/Todos.module.css","components/todosComponents/Footer/Footer.module.css","components/todosComponents/Header/Header.js","redux/reducer/todosReducer/filtersConst.js","redux/reducer/todosReducer/todosSlicer.js","components/todosComponents/Todo/Todo.js","components/todosComponents/Todo/keysConst.js","redux/selectors/todosSelector.js","components/todosComponents/Todos/Todos.js","components/todosComponents/InputTodo/InputTodo.js","components/todosComponents/Filters/FiltersNav.js","components/todosComponents/Filters/Filters.js","components/todosComponents/Footer/Footer.js","App.js","redux/store.js","redux/localStorage.js","index.js"],"names":["module","exports","Header","className","style","header","FILTER_ALL","FILTER_ACTIVE","FILTER_COMPLETED","defaultState","todos","currentFilter","editTodoTitle","todosSlicer","createSlice","name","initialState","reducers","addTodo","state","action","concat","payload","deleteTodo","newListWithDeletedTodo","filter","todo","id","checkTodo","newListWithCheckTodo","map","completed","clearCompleted","newListWithoutCompleted","editTitle","editTodo","edited","newListWithEditedTodo","title","checkAllTodos","newListCheckAllTodos","changeFilter","actions","reducer","mapDispatchToProps","deleteTodoTodo","checkTodoTodo","editTitleTodo","newTitle","editTodoTodo","connect","useState","setEditTodoTitle","inputRef","useRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","visibility","item","hidden","checkButtonActive","onClick","type","input","value","onChange","currentTarget","onKeyDown","keyCode","preventDefault","ref","titleCompleted","titleActive","onDoubleClick","deleteButton","getTodos","todosReducer","getFilter","makeGetVisibleTodos","createSelector","getVisibleTodos","list","elem","addTodoInput","checkAllTodosInput","userInput","setUserInput","onSubmit","trim","newTodo","Date","now","toString","length","label","placeholder","changeFilterNav","getFilterStatus","filterStatus","all","active","allSelected","setAllSelected","activeSelected","setActiveSelected","completedSelected","setCompletedSelected","filters","none","href","clearCompletedFilters","getItemsLeft","itemsLeft","getAllTodos","filtersWrapper","itemLeft","filtersAfter1","filtersAfter2","Footer","info","preloadedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","configureStore","subscribe","stringify","setItem","saveState","getState","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b580c326.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filtersWrapper\":\"Filtres_filtersWrapper__3lycx\",\"filters\":\"Filtres_filters__1xntt\",\"item\":\"Filtres_item__2dwu6\",\"active\":\"Filtres_active__Osn4H\",\"none\":\"Filtres_none__1CPRt\",\"hidden\":\"Filtres_hidden__23Uj7\",\"itemLeft\":\"Filtres_itemLeft__1jlr7\",\"clearCompleted\":\"Filtres_clearCompleted__33nzi\",\"filtersAfter1\":\"Filtres_filtersAfter1___mKQO\",\"filtersAfter2\":\"Filtres_filtersAfter2__3DZF4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Todo_item__1dDa6\",\"hidden\":\"Todo_hidden__11Xsj\",\"checkButtonActive\":\"Todo_checkButtonActive__19PSt\",\"checkButtonCompleted\":\"Todo_checkButtonCompleted__HtDpE\",\"titleActive\":\"Todo_titleActive__KTfYe\",\"titleCompleted\":\"Todo_titleCompleted__3NTsR\",\"input\":\"Todo_input__2Sf65\",\"deleteButton\":\"Todo_deleteButton__3c-N5\",\"done\":\"Todo_done__1tOzF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"InputTodo_input__2Q0hR\",\"label\":\"InputTodo_label__19MOY\",\"hidden\":\"InputTodo_hidden__JiJgS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1x_n9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Todos_list__2jP6D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"Footer_info__3rPH6\"};","import React from \"react\";\r\nimport style from './Header.module.css'\r\n\r\nconst Header = () => (\r\n        <header className={style.header}>todos</header>\r\n    )\r\n\r\nexport default Header\r\n","export const FILTER_ALL = 'all'\r\nexport const FILTER_ACTIVE = 'active'\r\nexport const FILTER_COMPLETED = 'completed'","import {createSlice} from \"@reduxjs/toolkit\";\r\nimport {FILTER_ALL} from \"./filtersConst\";\r\n\r\nconst defaultState = {\r\n    todos: [],\r\n    currentFilter: FILTER_ALL,\r\n    editTodoTitle: ''\r\n}\r\n\r\nexport const todosSlicer = createSlice({\r\n    name: 'todos',\r\n    initialState: defaultState,\r\n    reducers: {\r\n        addTodo(state, action) {\r\n            return {\r\n                ...state,\r\n                todos: state.todos.concat(action.payload)\r\n            }\r\n        },\r\n        deleteTodo(state, action) {\r\n            const newListWithDeletedTodo = state.todos.filter((todo) => todo.id !== action.payload);\r\n            return {\r\n                ...state,\r\n                todos: newListWithDeletedTodo\r\n            }\r\n        },\r\n        checkTodo(state, action) {\r\n            const newListWithCheckTodo = state.todos.map((todo) => {\r\n                if (todo.id === action.payload && todo.completed) {\r\n                    return {...todo, completed: !todo.completed}\r\n                }\r\n                if (todo.id === action.payload && !todo.completed) {\r\n                    return {...todo, completed: !todo.completed}\r\n                }\r\n                return {...todo}\r\n            })\r\n            return {\r\n                ...state,\r\n                todos: newListWithCheckTodo\r\n            }\r\n        },\r\n        clearCompleted(state){\r\n            const newListWithoutCompleted = state.todos.filter(todo => !todo.completed);\r\n            return {\r\n                ...state,\r\n                todos: newListWithoutCompleted\r\n            }\r\n        },\r\n        editTitle(state, action) {\r\n            return {\r\n                ...state,\r\n                editTodoTitle: action.payload\r\n            }\r\n        },\r\n        editTodo(state, action) {\r\n            const {id, edited} = action.payload\r\n            if (!edited) {\r\n                const newListWithEditedTodo = state.todos.map((todo) => todo.id === id ? {\r\n                    ...todo,\r\n                    edited: true\r\n                } : {...todo});\r\n                return {\r\n                    ...state,\r\n                    todos: newListWithEditedTodo\r\n                }\r\n            }\r\n\r\n            const newListWithEditedTodo = state.todos.map((todo) => todo.id === id ? {\r\n                ...todo,\r\n                edited: false,\r\n                title: state.editTodoTitle\r\n            } : {...todo});\r\n            return {\r\n                ...state,\r\n                todos: newListWithEditedTodo\r\n            }\r\n        },\r\n        checkAllTodos(state) {\r\n            const isFirstTodoCompleted = state.todos[0].completed\r\n            if (isFirstTodoCompleted) {\r\n                const newListCheckAllTodos = state.todos.map(todo => ({...todo, completed: false}))\r\n                return {\r\n                    ...state,\r\n                    todos: newListCheckAllTodos\r\n                }\r\n            }\r\n            const newListCheckAllTodos = state.todos.map(todo => ({...todo, completed: true}))\r\n            return {\r\n                ...state,\r\n                todos: newListCheckAllTodos\r\n            }\r\n        },\r\n        changeFilter(state, action) {\r\n            return {\r\n                ...state,\r\n                currentFilter: action.payload\r\n            }\r\n        }\r\n    },\r\n})\r\n\r\nconst { actions, reducer } = todosSlicer;\r\n\r\nexport const { addTodo, deleteTodo, checkTodo, clearCompleted, editTitle, editTodo, checkAllTodos, changeFilter } = actions\r\n\r\nexport default reducer","import React, {useEffect, useRef, useState} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport {checkTodo, deleteTodo, editTitle, editTodo} from \"../../../redux/reducer/todosReducer/todosSlicer\";\r\nimport {ENTER_KEY_CODE, ESC_KEY_CODE} from \"./keysConst\";\r\nimport style from './Todo.module.css'\r\n\r\nconst Todo = ({todo, deleteTodoTodo, checkTodoTodo, editTitleTodo, editTodoTodo}) => {\r\n\r\n    const [editTodoTitle, setEditTodoTitle] = useState(todo.title)\r\n\r\n    const checkTodoHandler = () => {\r\n        checkTodoTodo(todo.id);\r\n    }\r\n\r\n    const editTodoHandler = () => {\r\n        editTodoTodo(todo)\r\n    }\r\n\r\n    const changeInputHandler = (event) => {\r\n        setEditTodoTitle(event.currentTarget.value);\r\n    }\r\n\r\n    const keyDownHandler = (event) => {\r\n        if (event.keyCode === ENTER_KEY_CODE || event.keyCode === ESC_KEY_CODE) {\r\n            event.preventDefault();\r\n            editTitleTodo(editTodoTitle)\r\n            editTodoTodo(todo)\r\n        }\r\n    }\r\n\r\n    const inputRef = useRef(null)\r\n    useEffect(() => {\r\n        const handleClickOutside = event => {\r\n            if (!inputRef.current || inputRef.current.contains(event.target)) {\r\n                return;\r\n            }\r\n            editTitleTodo(editTodoTitle)\r\n            editTodoTodo(todo)\r\n        }\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        }\r\n    })\r\n\r\n    return (\r\n        <li className={todo.visibility ? style.item: style.hidden}>\r\n            <div\r\n                className={todo.edited ? (style.hidden) : (style.checkButtonActive)}\r\n                onClick={checkTodoHandler}\r\n            />\r\n\r\n            {todo.edited ?\r\n                (<form>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={style.input}\r\n                        value={editTodoTitle}\r\n                        onChange={changeInputHandler}\r\n                        onKeyDown={keyDownHandler}\r\n                        ref={inputRef}\r\n                    />\r\n                </form>) :\r\n                (<div\r\n                    className={todo.completed ? style.titleCompleted : style.titleActive}\r\n                    onDoubleClick={editTodoHandler}>{todo.title}\r\n                </div>)}\r\n\r\n\r\n            <button\r\n                className={todo.edited? style.hidden : style.deleteButton}\r\n                onClick={() => deleteTodoTodo(todo.id)}\r\n                type=\"submit\"\r\n            >&times;</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nTodo.propTypes = {\r\n    todo: PropTypes.objectOf(PropTypes.any),\r\n    deleteTodoTodo: PropTypes.func,\r\n    checkTodoTodo: PropTypes.func,\r\n    editTitleTodo: PropTypes.func,\r\n    editTodoTodo: PropTypes.func\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    deleteTodoTodo: id => deleteTodo(id),\r\n    checkTodoTodo: id => checkTodo(id),\r\n    editTitleTodo: newTitle => editTitle(newTitle),\r\n    editTodoTodo: id => editTodo(id),\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps) (Todo)","export const ENTER_KEY_CODE = 13;\r\nexport const ESC_KEY_CODE = 27;\r\n","import {createSelector} from \"reselect\";\r\nimport {FILTER_ACTIVE, FILTER_ALL, FILTER_COMPLETED} from \"../reducer/todosReducer/filtersConst\";\r\n\r\nconst getTodos = (state) => state.todosReducer.todos\r\n\r\nconst getFilter = (state) => state.todosReducer.currentFilter\r\n\r\nexport const makeGetItemsLeft = () => createSelector(\r\n    [getTodos],\r\n    (todos) => {\r\n        let itemsLeft = 0\r\n        todos.map((todo) => {\r\n           if (!todo.completed) {\r\n               itemsLeft += 1\r\n           }\r\n           return itemsLeft\r\n        })\r\n        return itemsLeft\r\n    }\r\n)\r\n\r\nexport const makeGetVisibleTodos = () => createSelector(\r\n        [getFilter, getTodos],\r\n        (filter, todos) => {\r\n            if (filter === FILTER_ALL) {\r\n                return todos\r\n            }\r\n            if (filter === FILTER_ACTIVE) {\r\n                return todos.filter((todo) => !todo.completed)\r\n            }\r\n            if (filter === FILTER_COMPLETED) {\r\n                return todos.filter((todo) => todo.completed)\r\n            }\r\n            return todos\r\n        })\r\n\r\nexport const makeGetFilterStatus = () => createSelector(\r\n    [getFilter],\r\n    (filter) => {\r\n        let filterStatus = {}\r\n        if (filter === FILTER_ALL) {\r\n            filterStatus = {\r\n                all: true,\r\n                active: false,\r\n                completed: false\r\n            }\r\n        }\r\n        if (filter === FILTER_ACTIVE) {\r\n            filterStatus = {\r\n                all: false,\r\n                active: true,\r\n                completed: false\r\n            }\r\n        }\r\n        if (filter === FILTER_COMPLETED) {\r\n            filterStatus = {\r\n                all: false,\r\n                active: false,\r\n                completed: true\r\n            }\r\n        }\r\n        return filterStatus\r\n    }\r\n)\r\n\r\nexport const makeGetAllTodos = () => createSelector(\r\n    [getTodos],\r\n    (todos) => (todos)\r\n)\r\n\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport Todo from \"../Todo/Todo\";\r\nimport style from \"./Todos.module.css\";\r\nimport {makeGetVisibleTodos} from \"../../../redux/selectors/todosSelector\";\r\n\r\nconst Todos = ({todos}) => (\r\n    <div className={style.list}>\r\n        {todos.map((elem) => <Todo todo={elem} key={elem.id}/>)}\r\n    </div>\r\n)\r\n\r\nTodos.propTypes = {\r\n    todos: PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nconst makeMapStateToProps = () => {\r\n    const getVisibleTodos = makeGetVisibleTodos()\r\n    const mapStateToProps = (state) => ({\r\n            todos: getVisibleTodos(state)\r\n    })\r\n    return mapStateToProps\r\n}\r\n\r\nexport default connect(makeMapStateToProps, null)(Todos)","import React, {useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport {addTodo, checkAllTodos} from \"../../../redux/reducer/todosReducer/todosSlicer\";\r\nimport style from './InputTodo.module.css'\r\nimport {makeGetVisibleTodos} from \"../../../redux/selectors/todosSelector\";\r\n\r\nconst InputTodo = ({todos, addTodoInput, checkAllTodosInput}) => {\r\n\r\n    const [userInput, setUserInput] = useState('')\r\n\r\n    const changeInputHandler = (event) => {\r\n        setUserInput(event.currentTarget.value);\r\n    }\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (userInput.trim()) {\r\n            const newTodo = {\r\n                title: userInput,\r\n                id: Date.now().toString(),\r\n                completed: false,\r\n                edited: false,\r\n                visibility: true\r\n            }\r\n            addTodoInput(newTodo);\r\n            setUserInput('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <label\r\n                className={todos.length > 0 ? style.label : style.hidden}\r\n                onClick={checkAllTodosInput}\r\n            >❯</label>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"What needs to be done?\"\r\n                className={style.input}\r\n                value={userInput}\r\n                onChange={changeInputHandler}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nInputTodo.propTypes = {\r\n    todos: PropTypes.arrayOf(PropTypes.object),\r\n    addTodoInput: PropTypes.func,\r\n    checkAllTodosInput: PropTypes.func\r\n}\r\n\r\nconst makeMapStateToProps = () => {\r\n    const getVisibleTodos = makeGetVisibleTodos()\r\n    const mapStateToProps = (state) => ({\r\n        todos: getVisibleTodos(state)\r\n    })\r\n    return mapStateToProps\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addTodoInput: todo => addTodo(todo),\r\n    checkAllTodosInput: checkAllTodos\r\n};\r\n\r\nexport default connect(makeMapStateToProps, mapDispatchToProps) (InputTodo)","import React, {useState} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes, {bool} from \"prop-types\";\r\nimport {changeFilter} from \"../../../redux/reducer/todosReducer/todosSlicer\";\r\nimport style from \"./Filtres.module.css\";\r\nimport {makeGetFilterStatus} from \"../../../redux/selectors/todosSelector\";\r\n\r\nconst FiltersNav = ({filterStatus, changeFilterNav}) => {\r\n\r\n    const [allSelected, setAllSelected] = useState(filterStatus.all)\r\n    const [activeSelected, setActiveSelected] = useState(filterStatus.active)\r\n    const [completedSelected, setCompletedSelected] = useState(filterStatus.completed)\r\n\r\n    const setAllHandler = () => {\r\n        setAllSelected(true);\r\n        setActiveSelected(false);\r\n        setCompletedSelected(false);\r\n        changeFilterNav('all');\r\n    }\r\n\r\n    const setActiveHandler = () => {\r\n        setAllSelected(false);\r\n        setActiveSelected(true);\r\n        setCompletedSelected(false);\r\n        changeFilterNav('active');\r\n    }\r\n\r\n    const setCompletedHandler = () => {\r\n        setAllSelected(false);\r\n        setActiveSelected(false);\r\n        setCompletedSelected(true);\r\n        changeFilterNav('completed');\r\n    }\r\n\r\n    return (\r\n        <nav className={style.filters}>\r\n            <div className={style.item}>\r\n                <a className={allSelected? style.active : style.none} onClick={setAllHandler} href='#all'>All</a>\r\n            </div>\r\n            <div className={style.item}>\r\n                <a className={activeSelected? style.active : style.none} onClick={setActiveHandler} href='#active'>Active</a>\r\n            </div>\r\n            <div className={style.item}>\r\n                <a className={completedSelected? style.active : style.none} onClick={setCompletedHandler} href='#completed'>Completed</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nFiltersNav.propTypes = {\r\n    filterStatus: PropTypes.objectOf(bool),\r\n    changeFilterNav: PropTypes.func\r\n}\r\n\r\nconst makeMapStateToProps = () => {\r\n    const getFilterStatus = makeGetFilterStatus()\r\n    const mapStateToProps = (state) => ({\r\n        filterStatus: getFilterStatus(state)\r\n    })\r\n    return mapStateToProps\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    changeFilterNav: filter => changeFilter(filter)\r\n}\r\n\r\nexport default connect(makeMapStateToProps, mapDispatchToProps) (FiltersNav)\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport FiltersNav from \"./FiltersNav\";\r\nimport {clearCompleted} from \"../../../redux/reducer/todosReducer/todosSlicer\";\r\nimport style from './Filtres.module.css'\r\nimport {makeGetItemsLeft, makeGetAllTodos} from \"../../../redux/selectors/todosSelector\";\r\n\r\nconst Filters = ({todos, itemsLeft, clearCompletedFilters}) => (\r\n        <div className={todos.length === 0 ? style.hidden : style.none}>\r\n            <div className={style.filtersWrapper}>\r\n                <div className={style.itemLeft}>{itemsLeft} items left</div>\r\n                <FiltersNav />\r\n                <div\r\n                    className={style.clearCompleted}\r\n                    onClick={clearCompletedFilters}\r\n                >Clear completed</div>\r\n            </div>\r\n            <div className={style.filtersAfter1}/>\r\n            <div className={style.filtersAfter2}/>\r\n        </div>\r\n    )\r\n\r\nFilters.propTypes = {\r\n    todos: PropTypes.arrayOf(PropTypes.object),\r\n    itemsLeft: PropTypes.number,\r\n    clearCompletedFilters: PropTypes.func\r\n}\r\n\r\nconst makeMapStateToProps = () => {\r\n    const getItemsLeft = makeGetItemsLeft()\r\n    const getAllTodos = makeGetAllTodos()\r\n    const mapStateToProps = (state) => ({\r\n        todos: getAllTodos(state),\r\n        itemsLeft: getItemsLeft(state)\r\n    })\r\n    return mapStateToProps\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    clearCompletedFilters: clearCompleted\r\n}\r\n\r\nexport default connect(makeMapStateToProps, mapDispatchToProps) (Filters)\r\n","import React from \"react\";\r\nimport style from './Footer.module.css'\r\n\r\nconst Footer  = () => (\r\n        <footer className={style.info}>\r\n            <p>Double-click to edit a todo</p>\r\n            <p>Created by Medvedeva Taisia</p>\r\n        </footer>\r\n    )\r\n\r\nexport default Footer\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Header from \"./components/todosComponents/Header/Header\";\r\nimport Todos from \"./components/todosComponents/Todos/Todos\";\r\nimport InputTodo from \"./components/todosComponents/InputTodo/InputTodo\";\r\nimport Filters from \"./components/todosComponents/Filters/Filters\";\r\nimport Footer from \"./components/todosComponents/Footer/Footer\";\r\n\r\nconst App = () => (\r\n        <div className='body' >\r\n            <div className='wrapper'>\r\n                <Header/>\r\n                <InputTodo/>\r\n                <Todos/>\r\n                <Filters/>\r\n                <Footer/>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\nexport default connect(null, null) (App)\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport todosReducer from \"./reducer/todosReducer/todosSlicer\";\r\nimport {loadState, saveState} from \"./localStorage\";\r\n\r\nconst reducer = {\r\n    todosReducer\r\n}\r\nconst preloadedState = loadState();\r\n\r\nexport const store = configureStore({\r\n    reducer,\r\n    preloadedState,\r\n})\r\n\r\nstore.subscribe(() => {\r\n    saveState({\r\n        todosReducer: store.getState().todosReducer\r\n    });\r\n});\r\n\r\n","export const loadState = () => {\r\n    try {\r\n        const serializedState = localStorage.getItem('state');\r\n        if (serializedState === null) {\r\n            return undefined;\r\n        }\r\n        return JSON.parse(serializedState);\r\n    } catch (err) {\r\n        return undefined;\r\n    }\r\n};\r\n\r\nexport const saveState = (state) => {\r\n    try {\r\n        const serializedState = JSON.stringify(state);\r\n        localStorage.setItem('state', serializedState);\r\n    } catch {\r\n        // ignore write errors\r\n    }\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from \"react-redux\";\r\nimport App from './App';\r\nimport './index.css';\r\nimport {store} from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <React.StrictMode>\r\n            <App/>\r\n        </React.StrictMode>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}